# –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É –Ω–∞–¥ –≤—Ç–æ—Ä—ã–º –∑–∞–¥–∞–Ω–∏–µ–º.
# –†–µ–∞–ª–∏–∑—É–π—Ç–µ –º–µ—Ö–∞–Ω–∏–∑–º –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤–≤–æ–¥–∏–º—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –¥–∞–Ω–Ω—ã—Ö.
# –ù–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∞ —Å–∫–ª–∞–¥, –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫–æ–≤—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö.
# –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ø–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤ –ø—Ä–æ–µ–∫—Ç–µ ¬´–°–∫–ª–∞–¥ –æ—Ä–≥—Ç–µ—Ö–Ω–∏–∫–∏¬ª –º–∞–∫—Å–∏–º—É–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π,
# –∏–∑—É—á–µ–Ω–Ω—ã—Ö –Ω–∞ —É—Ä–æ–∫–∞—Ö –ø–æ –û–û–ü.

printer_list = []
scanner_list = []
xerx_list = []


class Stock:

    def add_scanner(self):
        scanner_list.append(f'{self.name} - {self.serial_number}')


    def add_printer(self):
        printer_list.append(f'{self.name} - {self.serial_number}')


    def add_xerx(self):
        xerx_list.append(f'{self.name} - {self.serial_number}')





class Equipment(Stock):

    def __init__(self, name, serial_number):
        self.name = name
        self.serial_number = serial_number
        while True:
            try:
                self.serial_number != int(self.serial_number)
            except ValueError:
                    print('–ù–µ –≤–µ—Ä–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö. –≤–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã')
                    self.serial_number = input(f'–≤–≤–µ–¥–∏—Ç–µ —Å–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä {self.name} ')
            else:
                break



class Printer(Equipment):

    def printing(self):
        print(self.shelf(), self.name, self.serial_number, '...doing printing...')

class Scanner(Equipment):

    def do_scan(self):
        print(self.shelf(), self.name, self.serial_number, '...doing scanning...')

class Xerx(Equipment):

    def persian_king(self):
        print(self.shelf(), '–ö—Å–µ—Ä–∫—Å I (–¥—Ä.-–ø–µ—Ä—Å. êéßêèÅêéπêé†êéºêèÅêé† X≈°ayƒÅr≈°ƒÅ, '
                            '—á—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç ¬´–¶–∞—Ä—å –≥–µ—Ä–æ–µ–≤¬ª –∏–ª–∏ ¬´–ì–µ—Ä–æ–π —Å—Ä–µ–¥–∏ —Ü–∞—Ä–µ–π¬ª)' '\n'
              ' –°—ã–Ω –î–∞—Ä–∏—è I –∏ –ê—Ç–æ—Å—Å—ã, –¥–æ—á–µ—Ä–∏ –ö–∏—Ä–∞ II - –Ω–∞—á–∏–Ω–∞–µ—Ç –≤–æ–µ–Ω–Ω—ã–π –ø–æ—Ö–æ–¥')

first_thing = Printer('–ø—Ä–∏–Ω—Ç–µ—Ä', 111)
first_thing.add_printer()

new_printer = Printer(input('–Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–Ω—Ç–µ—Ä–∞ '), input('—Å–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä –ø—Ä–∏–Ω—Ç–µ—Ä–∞ '))
new_printer.add_printer()
print(new_printer.shelf())
print(f'—Å–ø–∏—Å–æ–∫ –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥–µ: {printer_list}')



